{"version":3,"file":"static/js/664.39485307.chunk.js","mappings":"2ZAsBMA,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,CAAkB,CACrC,sBAAuB,CACrBE,MAAO,WAET,8BAA+B,CAC7BC,kBAAmB,SAErB,2BAA4B,CAC1B,aAAc,CACZC,YAAa,WAEf,mBAAoB,CAClBA,YAAa,WAEf,yBAA0B,CACxBA,YAAa,cAMbC,EAAe,CACjBC,MAAO,GACPC,SAAU,IAiGd,UA9FkB,WACd,OAA4BC,EAAAA,EAAAA,UAASH,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3B,GAAwCL,EAAAA,EAAAA,WAAS,GAAjD,eAAOM,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MASXC,EAAe,SAAAC,GACjB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,KACfd,GAAU,SAAAe,GAAI,yBAAUA,GAAV,cAAiBD,EAAOD,GAAxB,GACjB,EAEKG,EAAY,mCAAG,WAAMC,GAAN,wEACjBA,EAAIC,iBADa,kBAMPZ,GAASa,EAAAA,EAAAA,IAAepB,IAASqB,SAN1B,OAObC,IAAAA,OAAAA,QAAwB,YAExBb,EAAS,IAAK,CAAEc,SAAS,IATZ,gDAWbC,QAAQC,IAAR,MACAH,IAAAA,OAAAA,QAAwB,gBAZX,yDAAH,sDAiBlB,OACI,iCACI,SAAC,KAAD,CAAMI,GAAG,IAAIH,SAAO,EAApB,0BAECrB,IAAWyB,EAAAA,EAAAA,UAAkB,SAAC,IAAD,KAC9B,wCAEA,UAAC,IAAD,CACIC,UAAU,OACVC,GAAI,CAAC,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAC5CC,YAAU,EACVC,aAAa,MACbC,SAAUjB,EALd,WAOI,4BACI,SAAC3B,EAAD,CACI6C,GAAG,4BACHC,MAAM,QACNC,YAAY,aACZC,WAAS,EACTC,KAAK,OACLxB,KAAK,QACLyB,UAAQ,EACRC,SAAU9B,KAEd,UAAC,IAAD,CAAakB,GAAI,CAAEC,EAAG,EAAGC,MAAO,QAAUW,QAAQ,WAAlD,WACI,SAAC,IAAD,CAAYC,QAAQ,8BAApB,uBACA,SAAC,IAAD,CACIR,GAAG,8BACHI,KAAMlC,EAAe,OAAS,WAC9BuC,cACI,SAAC,IAAD,CAAgBC,SAAS,MAAzB,UACI,SAAC,IAAD,CACA,aAAW,6BACXC,QA9DA,kBAAMxC,GAAgB,SAACyC,GAAD,OAAWA,CAAX,GAAtB,EA+DAC,YA7DA,SAACpC,GAC7BA,EAAMO,gBACT,EA4D+B8B,KAAK,MAJL,SAMC5C,GAAe,SAAC,IAAD,KAAoB,SAAC,IAAD,QAI5C+B,MAAM,WACNrB,KAAK,WACLyB,UAAQ,EACRC,SAAU9B,WAItB,mBAAQuC,UAAU,oCAAoCX,KAAK,SAA3D,kCAOf,C","sources":["pages/LoginPage/LoginPage.jsx"],"sourcesContent":["\nimport { useState } from \"react\";\n// import axios from \"axios\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport Notiflix from \"notiflix\";\n\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport InputLabel from '@mui/material/InputLabel';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport IconButton from '@mui/material/IconButton';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport Visibility from '@mui/icons-material/Visibility';\nimport { styled } from '@mui/material/styles';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { authLoginThunk } from \"redux/auth/auth.thunk\";\nimport { selectorAuthStatus } from \"redux/auth/auth.selector\";\nimport { STATUS } from \"constans/status.constans\";\nimport Spinner from \"components/Spinner/Spinner\";\n\nconst CssTextField = styled(TextField)({\n  '& label.Mui-focused': {\n    color: '#6f172b',\n  },\n  '& .MuiInput-underline:after': {\n    borderBottomColor: 'green',\n  },\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#b73c58',\n    },\n    '&:hover fieldset': {\n      borderColor: '#bdbdbd',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#b73c58',\n    },\n  },\n});\n\n\nconst initialState = {\n    email: '',\n    password: '',\n};\n\nconst LoginPage = () => {\n    const [values, setValues] = useState(initialState);\n    const status = useSelector(selectorAuthStatus);\n    // const [isLoading, setIsLoading] = useState(false); \n    const [showPassword, setShowPassword] = useState(false);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n\n    const handleClickShowPassword = () => setShowPassword((show) => !show);\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        setValues(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleSubmit = async evt => {\n        evt.preventDefault();\n        // setIsLoading(true);\n        // console.log(values)\n        try {\n            // const data = await dispatch(authLoginThunk(values)).unwrap();\n            await dispatch(authLoginThunk(values)).unwrap();\n            Notiflix.Notify.success(\"It's ok!\");\n            // console.log(data);\n            navigate('/', { replace: true });\n        } catch (error) {\n            console.log(error);\n            Notiflix.Notify.failure('Some mistake');\n        }\n\n    }\n\n    return (\n        <>\n            <Link to='/' replace>to home page</Link>\n\n            {status === STATUS.loading && <Spinner/>}\n            <h2>Login Page</h2>\n\n            <Box\n                component=\"form\"\n                sx={{'& .MuiTextField-root': { m: 1, width: '25ch' },}}\n                noValidate\n                autoComplete=\"off\"\n                onSubmit={handleSubmit}\n                >\n                <div>\n                    <CssTextField\n                        id=\"custom-css-outlined-input\"\n                        label=\"Email\"\n                        placeholder=\"User email\"\n                        multiline\n                        type=\"text\"\n                        name=\"email\"\n                        required\n                        onChange={handleChange}\n                    />\n                    <FormControl sx={{ m: 1, width: '25ch' }} variant=\"outlined\">\n                        <InputLabel htmlFor=\"outlined-adornment-password\">Password</InputLabel>\n                        <OutlinedInput\n                            id=\"outlined-adornment-password\"\n                            type={showPassword ? 'text' : 'password'}\n                            endAdornment={\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                    aria-label=\"toggle password visibility\"\n                                    onClick={handleClickShowPassword}\n                                    onMouseDown={handleMouseDownPassword}\n                                    edge=\"end\"\n                                    >\n                                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                                    </IconButton>\n                                </InputAdornment>\n                            }\n                            label=\"Password\"\n                            name='password'\n                            required\n                            onChange={handleChange}\n                        />\n                    </FormControl>\n                </div>\n                <button className=\"w-100 mt-2 btn btn-lg btn-primary\" type=\"submit\">\n                    Go to PhoneBook\n                </button>\n            </Box>\n        \n        </>\n    )\n}\nexport default LoginPage;\n\n"],"names":["CssTextField","styled","TextField","color","borderBottomColor","borderColor","initialState","email","password","useState","values","setValues","status","useSelector","selectorAuthStatus","showPassword","setShowPassword","dispatch","useDispatch","navigate","useNavigate","handleChange","event","target","value","name","prev","handleSubmit","evt","preventDefault","authLoginThunk","unwrap","Notiflix","replace","console","log","to","STATUS","component","sx","m","width","noValidate","autoComplete","onSubmit","id","label","placeholder","multiline","type","required","onChange","variant","htmlFor","endAdornment","position","onClick","show","onMouseDown","edge","className"],"sourceRoot":""}